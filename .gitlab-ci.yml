stages:
  - test
  - build
  - deploy-staging
  - deploy-prod

variables:
  # Container registry
  CI_REGISTRY: "registry.gitlab.local"
  CI_REGISTRY_IMAGE: "$CI_REGISTRY/root/freelance"
  
  # Kubernetes
  K8S_STAGING_NAMESPACE: "staging"
  K8S_PROD_NAMESPACE: "production"
  
  # Database URLs (defined in GitLab CI/CD variables)
  DATABASE_URL: "sqlite:///app.db"  # Dev default
  STAGING_DB_URL: "$STAGING_DB_URL"  # Defined in CI vars
  PROD_DB_URL: "$PROD_DB_URL"        # Defined in CI vars

# Test with coverage
test:
  stage: test
  image: python:3.9
  script:
    - pip install -r requirements.txt pytest coverage gunicorn
    - pytest --cov=./ --cov-report=xml
    - coverage report
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

# Build using Kaniko (no Docker-in-Docker needed)
build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
      --destination "$CI_REGISTRY_IMAGE:latest"

# Deploy to staging namespace
deploy-staging:
  stage: deploy-staging
  image: bitnami/kubectl:latest
  environment:
    name: staging
    url: http://staging.freelance.local
  script:
    - kubectl config use-context local-k8s
    - kubectl apply -f kubernetes/staging/ -n $K8S_STAGING_NAMESPACE
    - kubectl rollout status deployment/freelance -n $K8S_STAGING_NAMESPACE
  only:
    - main

# Manual production deployment  
deploy-prod:
  stage: deploy-prod
  image: bitnami/kubectl:latest
  environment:
    name: production
    url: http://freelance.local
  when: manual
  script:
    - kubectl config use-context local-k8s
    - kubectl apply -f kubernetes/production/ -n $K8S_PROD_NAMESPACE
    - kubectl rollout status deployment/freelance -n $K8S_PROD_NAMESPACE
  only:
    - tags